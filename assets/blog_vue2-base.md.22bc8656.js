import{_ as s,c as n,b as a,d as l,t as p,a as o,o as e}from"./app.f6a6e2f2.js";const t=JSON.parse('{"title":"vue | vue2知识点归纳与总结","description":"","frontmatter":{"title":"vue | vue2知识点归纳与总结"},"headers":[],"relativePath":"blog/vue2-base.md","lastUpdated":1681203305000}'),c={name:"blog/vue2-base.md"},r=o('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>    当前总结是本人在业余学习与实践过程后的总结与归纳,旨在检验自己的积累,也方便忘记时查阅,同时也希望能帮助那些这方面知识匮乏的同行门,总结是基于<code>vue2.x</code>,<code>vue-cli3.x</code>,主要记录些，<code>vue</code>常用的指令、事件，监听、数据绑定、过滤器、组件、动画、<code>vuex</code>，<code>vue-router</code>等日常工作中时常用到的东西,也有些常用的<code>插件</code>和<code>开发工具</code>的介绍与使用，以及部分<code>性能优化</code>的建议与实践,如有不对，或不足的地方，也请各位大神，指出来，学习学习。</p><h2 id="_1-基础" tabindex="-1">1.基础 <a class="header-anchor" href="#_1-基础" aria-label="Permalink to &quot;1.基础&quot;">​</a></h2><h4 id="_1-理解mvvm" tabindex="-1">1. 理解<code>mvvm</code> <a class="header-anchor" href="#_1-理解mvvm" aria-label="Permalink to &quot;1. 理解`mvvm`&quot;">​</a></h4><ul><li><code>m</code> 是<code>vue</code>实例中的<code>data</code>,自定义的数据或后端返回的数组 不是后端<code>mvc</code>里的<code>model</code>概念不同。</li><li><code>vm</code> 是<code>vue</code>的实例 <code>m</code>和<code>v</code>之间的调度者 是<code>mvvm</code>的核心思想</li><li><code>v</code>是 <code>html</code> 要渲染的。</li></ul><h4 id="_2-常用指令" tabindex="-1">2. 常用指令 <a class="header-anchor" href="#_2-常用指令" aria-label="Permalink to &quot;2. 常用指令&quot;">​</a></h4>',6),D=a("code",null,"v-cloak",-1),y=a("li",null,[a("code",null,"v-text"),l(" 会先执行 覆盖 元素中原本的内容 但是插值表达式只会覆盖自己的占位符，默认不会闪烁")],-1),F=a("li",null,[a("code",null,"v-html"),l(" 渲染 html标签 覆盖元素中原有元素内容")],-1),i=a("li",null,[a("code",null,"v-bind"),l(": 简写为: 用来绑定数据 可以写合法的js表达式")],-1),C=a("li",null,[a("code",null,"v-on"),l(": 简写为 "),a("code",null,"@"),l(" 用来点击事件")],-1),A=o('<h4 id="_3-常用事件修饰符" tabindex="-1">3.常用事件修饰符 <a class="header-anchor" href="#_3-常用事件修饰符" aria-label="Permalink to &quot;3.常用事件修饰符&quot;">​</a></h4><ul><li><p><code>stop</code> 阻止冒泡 ：外层和里层都有方法 点击里层会产生冒泡，也会触发外层的事件。 顺序 从里到外产生事件</p></li><li><p><code>prevent</code> 阻止浏览器默认行为 ： <code>a</code>标签有浏览器默认行为。</p></li><li><p><code>capture</code> 捕获事件 ：点击里层先触发外层再触发里层 顺序从外到里产生事件</p></li><li><p><code>self</code> 只触发自己本身的事件 不会产生冒泡和捕获事件 类似于阻止冒泡 但只针对自己那一层 最外层还是会被最里层冒泡冒到 <code>stop</code> 是阻止所有层次</p></li><li><p><code>once</code> 事件只执行一次</p></li></ul><h4 id="_4-数据的绑定" tabindex="-1">4.数据的绑定 <a class="header-anchor" href="#_4-数据的绑定" aria-label="Permalink to &quot;4.数据的绑定&quot;">​</a></h4><ul><li><code>v-bind</code>: 数据的单向绑定</li><li><code>v-modle</code> :数据的双向绑定 这个只能用于表单元素中</li></ul><blockquote><p>tips: 表单元素 <code>radio</code> <code>text</code> <code>address</code> <code>email</code> <code>select</code> <code>checkbox</code> <code>textarea</code></p></blockquote><ul><li>组件嵌套：子组件里有v-model，父组件也有v-model的实现多层的双向绑定</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//子组件</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yx-from-item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">el-form-item</span><span style="color:#89DDFF;"> :label=&quot;label&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                  :prop=&quot;prop&quot;&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">      &lt;el-select </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">newModelValue</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                 </span><span style="color:#C792EA;">filterable</span></span>\n<span class="line"><span style="color:#89DDFF;">                 </span><span style="color:#C792EA;">clearable</span></span>\n<span class="line"><span style="color:#89DDFF;">                 :placeholder=&quot;placeholder&quot;&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">        &lt;el-option </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item in options</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                   :key=&quot;item.label&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                   :label=&quot;item.label&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                   :value=&quot;item.value&quot;&gt;&lt;/el-option&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">      &lt;/el-select&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">    &lt;/el-form-item&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/template&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">default</span><span style="color:#89DDFF;"> {</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//双向数据绑定--核心</span></span>\n<span class="line"><span style="color:#A6ACCD;">  model: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">prop</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">modelValue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//要存在于props</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;">//当组件的值发生改变时要emit的事件名</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  props: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">label</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">prop</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">placeholder</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">选择学校</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//下拉</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Array</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">开启</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">关闭</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">        ]</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">//数据绑定的值--核心</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">modelValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;"> () </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return { </span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">newModelValue</span><span style="color:#89DDFF;">:this.</span><span style="color:#A6ACCD;">modelValue</span><span style="color:#676E95;font-style:italic;">//核心</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">mounted</span><span style="color:#89DDFF;"> () {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span></span>\n<span class="line"><span style="color:#89DDFF;"> watch: {</span><span style="color:#676E95;font-style:italic;">//这里检测子组件中的data中的值，一旦发生 变化就提交事件到父组件--核心</span></span>\n<span class="line"><span style="color:#A6ACCD;">  newModelValue: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newVal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">oldval</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVal</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//父组件修改了model值也要赋值给子组件--核心</span></span>\n<span class="line"><span style="color:#A6ACCD;">    modelValue: </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newVal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">oldval</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">newModelValue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVal</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;"> }</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//父组件使用</span></span>\n<span class="line"><span style="color:#89DDFF;"> &lt;yx-form-item </span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">所属学校：</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">prop</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">school_id</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-model</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">leftForm.model.school_id</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">    :options=&#39;leftForm.schoolOptions&#39;&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;"> &lt;/yx-form-item&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;"> () {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">/*表单*/</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">leftForm</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//学校选项</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">schoolOptions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">label</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">工程</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">label</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">华南</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">className</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ml-32</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">     ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//绑定的值 rules 规则也使用到的值</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">model</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">school_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//学校id</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">grade_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//年级</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">branch_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//学院</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">specialty_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//专业</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">class_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//班级</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">st_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//学生姓名</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">realname</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//真实姓名</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">alias</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//学生昵称</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">user_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//登录账号、学号</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">birthday</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//出生日期</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//登录密码</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">weixin_userid</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 微信账号</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">mobile_phone</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//手机号</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">system</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//学制</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">state</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//学籍状态 --账户状态</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">graduate_year</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//毕业年份</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">teachername</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//辅导员</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">sex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//性别</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//介绍</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">role</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//角色</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">dorm_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//宿舍号id</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">building_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//楼号id</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//规则</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">state</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请选择</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">school_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请选择</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">          ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">branch_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请选择</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blur</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">user_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入账号</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blur</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入密码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blur</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">mobile_phone</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">validator</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$Element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isNum</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blur</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">min</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">max</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">请输入11位的手机号</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">trigger</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blur</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">          ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// sex: [{ required: true, message: &quot;请选择性别&quot;, trigger: &quot;change&quot; }]</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"></span></code></pre></div><h4 id="_5-class-绑定" tabindex="-1">5.<code>class</code> 绑定 <a class="header-anchor" href="#_5-class-绑定" aria-label="Permalink to &quot;5.`class` 绑定&quot;">​</a></h4><h5 id="_1-数组带对象" tabindex="-1">1.数组带对象 <a class="header-anchor" href="#_1-数组带对象" aria-label="Permalink to &quot;1.数组带对象&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;[classA,classB,{&#39;classC&#39;:flag}]&quot; &gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">data()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">flag</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:可以在类中的数组中写三元表达式,但推荐使用对象来代替它控制是否渲染</p></blockquote><h5 id="_2-单纯的对象" tabindex="-1">2.单纯的对象 <a class="header-anchor" href="#_2-单纯的对象" aria-label="Permalink to &quot;2.单纯的对象&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;{classA:falg1,classB:flag2}&quot; /&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        falg1</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        falg2</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h5 id="_3-数组带三元" tabindex="-1">3.数组带三元 <a class="header-anchor" href="#_3-数组带三元" aria-label="Permalink to &quot;3.数组带三元&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;[&#39;ac&#39;,&#39;bd&#39;,falg?&#39;active&#39;:&#39;&#39;]&quot; / &gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">data()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">falg</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h5 id="_4-对象升级" tabindex="-1">4.对象升级 <a class="header-anchor" href="#_4-对象升级" aria-label="Permalink to &quot;4.对象升级&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;classObj&quot; /&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      classObj</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">classA</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">falg1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">classB</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">flag2</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:直接使用一个对象数组来控制样式</p></blockquote><h5 id="_5-使用style-的对象来实现样式的修改" tabindex="-1">5.使用<code>style</code> 的对象来实现样式的修改 <a class="header-anchor" href="#_5-使用style-的对象来实现样式的修改" aria-label="Permalink to &quot;5.使用`style` 的对象来实现样式的修改&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;styleObj&quot; /&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     styleObj</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h5 id="_5-使用style-的数组带对象来实现样式的修改" tabindex="-1">5.使用<code>style</code> 的数组带对象来实现样式的修改 <a class="header-anchor" href="#_5-使用style-的数组带对象来实现样式的修改" aria-label="Permalink to &quot;5.使用`style` 的数组带对象来实现样式的修改&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> :class=&quot;[styleObj1,styleObj2]&quot; /&gt;</span></span>\n<span class="line"><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     styleObj1</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">     styleObj2</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h4 id="_6-v-for的使用" tabindex="-1">6.<code>v-for</code>的使用 <a class="header-anchor" href="#_6-v-for的使用" aria-label="Permalink to &quot;6.`v-for`的使用&quot;">​</a></h4><h5 id="_1-可以遍历-普通数组-对象数组-对象-还可以是数字" tabindex="-1">1. 可以遍历: 普通数组,对象数组,对象,还可以是数字 <a class="header-anchor" href="#_1-可以遍历-普通数组-对象数组-对象-还可以是数字" aria-label="Permalink to &quot;1. 可以遍历: 普通数组,对象数组,对象,还可以是数字&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(item,key,index) in object</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> {{item}}--{{key}}--{{index}} </span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(count in 10)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><blockquote><p><strong>tips</strong>:在遍历对象的时候有多个<code>index</code>索引,遍历数字时是从1开始的。绑定<code>key</code>时属性值必须是<code>number</code>或者<code>string</code></p></blockquote><h4 id="_7-v-if、v-show" tabindex="-1">7.<code>v-if</code>、<code>v-show</code> <a class="header-anchor" href="#_7-v-if、v-show" aria-label="Permalink to &quot;7.`v-if`、`v-show`&quot;">​</a></h4><ul><li><code>v-if</code> 有较高的切换性能 , 适合元素可能永远不会被用户看到。</li><li><code>v-show</code> 有较高的初始渲染消耗,适合元素频繁切换。</li></ul><h4 id="_8-调试插件" tabindex="-1">8 调试插件 <a class="header-anchor" href="#_8-调试插件" aria-label="Permalink to &quot;8 调试插件&quot;">​</a></h4><ul><li><p>在谷歌商店找<code>vue-devtools</code>插件,使用这个插件 并设置插件,允许访问文件网址。 会在调试中出现vue相关的东西</p></li><li><p><code>debugger</code> 直接写可以调试</p></li></ul><h4 id="_9-过滤器" tabindex="-1">9 过滤器 <a class="header-anchor" href="#_9-过滤器" aria-label="Permalink to &quot;9 过滤器&quot;">​</a></h4><h5 id="全局和私有过滤器" tabindex="-1">全局和私有过滤器 <a class="header-anchor" href="#全局和私有过滤器" aria-label="Permalink to &quot;全局和私有过滤器&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(item,key) in object</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> {{item | dateFormat}}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">(count in 10)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><ul><li>全局</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue form </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">Vue.filter(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">过滤器名称</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">function()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">do</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">some</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><ul><li>私有(局部)</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">filters</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#FFCB6B;">dateFormat</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">param</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">some</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p><strong>tips</strong>：</p><ul><li><code>data</code> 就是 <code>|</code> 第一个参数已经被定死了,永远是, 管道左边要被转换的数据,param 是过滤方法传进来的其他参数,过滤器采用就近优先原则，如果私有和全局的名称一样就优先采用私有的。</li><li><code>padstart</code> 和 <code>padend</code> <code>es6</code> 的补<code>0 </code>方法</li><li>第二个参数是字符串,第三个参数是表达式,如果自己定义参数值是动态的会报错,还未找到原因,后期会找时间再看看,目前就是<code>简单的过滤用过滤器</code>,复杂点用<code>方法</code>,能用计算属性用<code>计算属性</code>,有缓存,能提高性能</li></ul></blockquote><h4 id="_10-按键修饰符" tabindex="-1">10 按键修饰符 <a class="header-anchor" href="#_10-按键修饰符" aria-label="Permalink to &quot;10 按键修饰符&quot;">​</a></h4><ul><li>监听pc键盘上的值</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@keyup.enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">方法名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><blockquote><p><strong>tips:</strong> <code>enter</code> 可以换成键盘上的任何一个值，只要去找相关的键盘码，就都可以使用,推荐设置个别名，放在没有按钮操作的模板。</p></blockquote><ul><li>自定义全局按键修饰符 <code>Vue.config.keyCodes.f2=113</code>,就可使用了</li></ul><blockquote><p><strong>tips:</strong> <code>f2</code>修饰符是<code>vue</code>里没有定义的自己创建。</p></blockquote><h4 id="_11-定义指令" tabindex="-1">11 定义指令 <a class="header-anchor" href="#_11-定义指令" aria-label="Permalink to &quot;11 定义指令&quot;">​</a></h4><h5 id="_1-全局" tabindex="-1">1. 全局 <a class="header-anchor" href="#_1-全局" aria-label="Permalink to &quot;1. 全局&quot;">​</a></h5><p>定义的指令都要按规定去创建 在<code>bind</code> 和 <code>inserted</code> 还有 <code>updated</code> 中去创建</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">directive</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">focus</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//每当指令绑定到元素上的时候,会立即执行bind 函数,只执行一次,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">注意</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">在元素刚绑定元素的时候</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">还没有插入到dom中去</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">这时候</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">调用focus方法没有作用</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">即放在focus 放在bind中是不起作用 的</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">binding</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">binding</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//表示元素插入到dom中的时候,只执行一次</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">inserted</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">focus</span><span style="color:#F07178;">() </span><span style="color:#A6ACCD;">js行为放在这里去创建</span><span style="color:#F07178;">  </span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//当组件更新的时候,可能会触发多次</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">updated</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){},</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><blockquote><p><strong>tips:</strong></p><ul><li><code>参数1</code>指令名称,在定义的时候，指令名称前面不需要加v-前缀,但是调用的时候,必须在指令名称前加v-前缀;<code>参数2</code>:是一个对象，在这个对象身上，有一些指令相关的函数，这些函数可以在特定的阶段,执行 相关的操作。</li><li>在每个函数中,的第一个参数,永远是<code>el</code>, <code>el</code>是代表被<code>bind</code>绑定的元素,<code>el</code>是个原生的<code>js</code>对象。 第二个参数可以是用户传进来值 <code>bingding.value</code></li></ul></blockquote><h5 id="_2-局部" tabindex="-1">2. 局部 <a class="header-anchor" href="#_2-局部" aria-label="Permalink to &quot;2. 局部&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">directives</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">指令名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h5 id="_3-简写" tabindex="-1">3. 简写 <a class="header-anchor" href="#_3-简写" aria-label="Permalink to &quot;3. 简写&quot;">​</a></h5><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">指令名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">binding</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//注意这个function 等同于 把代码写到bind和update中去</span></span>\n<span class="line"></span></code></pre></div><blockquote><p><strong>tips:</strong> 样式相关的指令放在<code>bind</code>中,<code>js</code>行为相关的放在<code>inserted</code>中比较合适,防止指令不生效。使用场景 写组件时可以用这个去改样式</p></blockquote><h4 id="_12-生命周期" tabindex="-1">12 生命周期 <a class="header-anchor" href="#_12-生命周期" aria-label="Permalink to &quot;12 生命周期&quot;">​</a></h4><p>常用</p>',56),d=a("li",null,[a("p",null,[a("code",null,"beforeCreate()"),l("：这是我们遇到的第一个生命周期函数,表示实例完全被创建出来之前,会执行它...")])],-1),u=a("li",null,[a("p",null,[a("code",null,"created()"),l(": 这是遇到的第二个生命周期函数...")])],-1),m=a("code",null,"beforeMount()",-1),h=a("code",null,"beforeMount",-1),g=o("<li><p><code>mounted()</code>：这是遇到的第四个生命周期函数,表示内存中的模板,已经真实的挂载到了页面中,用户已经可以看到渲染好的页面了。只要执行完这个生命周期,就表示整个<code>vue</code>实例已经初始化完毕了，此时，组件已经脱离了创建阶段，进入到了运行阶段。</p></li><li><p><code>beforeUpdate()</code>：这时候表示,我们的界面还没有被更新[但数据已经被更新了页面中显示的数据，还是旧的，此时<code>data</code>数据是最新的。页面尚未和最新的数据保持同步</p></li><li><p><code>update()</code> : 这一步执行的是 先根据<code>data</code>中最新的数据，在内存中重新渲染出一份最新的内存<code>dom</code>树,当最新的内存<code>dom</code>树被更新后,会把最新的内存<code>DOM</code>树重新渲染到真实的页面中去,这时候，就完成了数据<code>data(model层)-&gt;view(视图层)</code>的更新， 页面和<code>data</code>数据已经保持同步了,都是最新的。</p></li><li><p><code>beforeDestory</code> :当执行 <code>beforeDestory</code> 钩子函数的时候,<code>Vue</code>实例就已经从运行阶段,进入到销毁阶段, 当执行<code>beforeDestroy</code>的时候，实例身上所有的<code>data</code>和所有的<code>methods</code>以及<code>过滤器、指令...</code>都处于可用状态,此时,还没有真正执行销毁的过程。</p></li><li><p><code>destroyed</code> : 当执行这个函数的时候,组件已经被完全销毁了,此时，组件中所有的<code>数据,方法，指令，过滤器...</code>都已经不可用了</p></li><li><p><code>activated</code>: 当有keep-alive的状态下才能触发的生命周期，每次进入页面都会执行。</p></li>",6),E=o('<p>新增</p><ul><li><p><code>disactivated</code> 当keep-alive停用时调用。</p></li><li><p><code>disactivated</code> 当keep-alive停用时调用。</p></li><li><p><code>errorCaptured</code> 对组件中出现对异常错误进行处理</p></li></ul><h4 id="_13-过渡类名实现动画" tabindex="-1">13 过渡类名实现动画 <a class="header-anchor" href="#_13-过渡类名实现动画" aria-label="Permalink to &quot;13 过渡类名实现动画&quot;">​</a></h4><h5 id="_1-vue的内置动画" tabindex="-1">1. vue的内置动画 <a class="header-anchor" href="#_1-vue的内置动画" aria-label="Permalink to &quot;1. vue的内置动画&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> &lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-enter</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-leave-to</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">150px</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> --这东西是位移</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-leave-active</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">all </span><span style="color:#F78C6C;">0.4s</span><span style="color:#A6ACCD;"> ease</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> data()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  return </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">flag</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h5 id="_2-使用第三方类实现动画" tabindex="-1">2. 使用第三方类实现动画 <a class="header-anchor" href="#_2-使用第三方类实现动画" aria-label="Permalink to &quot;2. 使用第三方类实现动画&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">enter-active-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bounceIn</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#C792EA;">leave-avtive-class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bounceOut</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">duration</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">200</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">animated</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">  &gt;&lt;/</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h5 id="_3-在属性中声明js钩子-实现半场动画-只需要进场-不需要离场" tabindex="-1">3. 在属性中声明js钩子 实现半场动画(只需要进场,不需要离场) <a class="header-anchor" href="#_3-在属性中声明js钩子-实现半场动画-只需要进场-不需要离场" aria-label="Permalink to &quot;3. 在属性中声明js钩子 实现半场动画(只需要进场,不需要离场)&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition</span></span>\n<span class="line"><span style="color:#89DDFF;">  &lt;div </span></span>\n<span class="line"><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@before-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">beforeEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">enter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@after-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">afterEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition</span></span>\n<span class="line"><span style="color:#89DDFF;">  &lt;div </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">v-show</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@before-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">beforeEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">enter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@after-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">afterEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  methods:</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">beforeEnter</span><span style="color:#A6ACCD;">(el)</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//动画入场之前,此时动画尚未开始, 可以在beforeEnter中设置元素开始动画之前的初始位置    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">   el.style.transform</span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">translate(0,0)</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#F07178;">    },</span></span>\n<span class="line"><span style="color:#F07178;">    enter(el,done){</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">/*这句话,没有实际的作用,但是,如果不写,出不来动画效果,可以认为 这个会强制刷新动画,ofset触发了重绘重排导致动画更新了*/</span></span>\n<span class="line"><span style="color:#F07178;">     </span></span>\n<span class="line"><span style="color:#F07178;">     el.offsetWidth</span></span>\n<span class="line"><span style="color:#F07178;">     </span></span>\n<span class="line"><span style="color:#F07178;">     el.style.transform=</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">translate(150px,450px)</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#F07178;">     </span></span>\n<span class="line"><span style="color:#F07178;">     el.style.transition=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">all 1s ease</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">/*这里的done 代表着 </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">     afterEnter的引用,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">     这个会立即执行afterEnter 否则会有延时 </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>\n<span class="line"><span style="color:#F07178;">     done()       </span></span>\n<span class="line"><span style="color:#F07178;">    },</span></span>\n<span class="line"><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#F07178;">    afterEnter(el){</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/*动画完成之后,会调用afterEnter */</span></span>\n<span class="line"><span style="color:#F07178;">      this.flag=!this.flag</span></span>\n<span class="line"><span style="color:#F07178;">      </span></span>\n<span class="line"><span style="color:#F07178;">    }</span></span>\n<span class="line"><span style="color:#F07178;">  } </span></span>\n<span class="line"><span style="color:#F07178;">&lt;/script&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h5 id="_4-在实现列表过渡的时候-如果需要过渡的元素-是通过v-for循环渲染出来的-不能使用transition包裹-需要使用transitiongroup" tabindex="-1">4. 在实现列表过渡的时候,如果需要过渡的元素,是通过<code>v-for</code>循环渲染出来的,不能使用<code>transition</code>包裹,需要使用<code>transitionGroup</code> <a class="header-anchor" href="#_4-在实现列表过渡的时候-如果需要过渡的元素-是通过v-for循环渲染出来的-不能使用transition包裹-需要使用transitiongroup" aria-label="Permalink to &quot;4. 在实现列表过渡的时候,如果需要过渡的元素,是通过`v-for`循环渲染出来的,不能使用`transition`包裹,需要使用`transitionGroup`&quot;">​</a></h5><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition-group</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">appear</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ul</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;"> &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition-group</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-enter</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-leave-to</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">translateY</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">80</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> all </span><span style="color:#F78C6C;">0.6s</span><span style="color:#A6ACCD;"> ease</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/*离开后下一个东西没有动画使用这个可以使用动画实现下一个东西渐渐地飘上来的效果,要和 v-leave-active的absolute 配合 固定写法*/</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-move</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">all </span><span style="color:#F78C6C;">0.6s</span><span style="color:#A6ACCD;"> ease</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">v-leave-active</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">/* absolute 有个特点元素默认宽度就是最小值,要在元素上添加width:100%*/</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">out-in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">:is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">comName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:</p><ol><li><code>v-enter</code> [这是一个时间点] 是进入之前,元素的起始状态,此时还没有开始进入</li><li><code>v-leave-to</code> [这是一个时间点] 是动画离开之后，离开的终止状态,此时，元素动画已经结束了</li><li><code>v-enter-active</code> [入场动画的时间段]</li><li><code>v-leave-active</code> [离场动画的时间段]</li><li><code>animated</code> 是个动画库 新版本似乎不需要加入</li><li>使用：<code>duration=200</code> 来表示动画的时间 如果只写一个表示统一配置了开场和离场时间 用 <code>对象</code>可传入c入场和离场 <code>duration=&quot;{enter:200,leave:400}&quot;</code></li><li>添加<code>appear</code>属性,实现页面刚展示出来,入场时候的效果</li><li>通过为<code>transition-group</code> 元素,设置<code>tag</code>属性 指定 <code>transition-group</code> 渲染为指定元素,如果不指定<code>tag</code>属性,默认,渲染为<code>span</code> 标签</li><li><code>mode=&quot;out-in&quot; 先过渡再进来,防止有 阴影,通过</code>mode`来设置过渡方式。</li></ol></blockquote><blockquote><p>注意：最外层一定要用<code>transition</code>包裹着,动画似乎升级了,可以在<code>transition</code>标签中加入<code>name</code>属性,并且在<code>css</code>样式中把<code>v</code>,替换为你的<code>name</code>属性值。</p></blockquote><h5 id="_5-vue动画实践-路由-页面-切换" tabindex="-1">5.vue动画实践-路由(页面)切换 <a class="header-anchor" href="#_5-vue动画实践-路由-页面-切换" aria-label="Permalink to &quot;5.vue动画实践-路由(页面)切换&quot;">​</a></h5><ul><li>适用于后台管理系统</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;transition </span></span>\n<span class="line"><span style="color:#A6ACCD;">    name=&quot;fade-move&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    mode=&quot;out-in&quot; //先过渡再进来，防止阴影</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;router-view&gt; &lt;/router-view&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/transition&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5s</span><span style="color:#A6ACCD;"> all ease</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave-to</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate3d</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-100%</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter-to</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate3d</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li>适用于移动端</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;transition </span></span>\n<span class="line"><span style="color:#A6ACCD;">   name=&quot;fade-move&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   mode=&quot;out-in&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   &lt;router-view&gt; &lt;/router-view&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/transition&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5s</span><span style="color:#A6ACCD;"> all ease</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave-to</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-10px</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-enter-to</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-move-leave</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h4 id="_14-组件" tabindex="-1">14 组件 <a class="header-anchor" href="#_14-组件" aria-label="Permalink to &quot;14 组件&quot;">​</a></h4><p>1.使用<code>Vue.extend</code> 来创建全局的<code>Vue</code>组件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> coml</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;h3&gt;这是使用Vue.extend 创建的组件&lt;/h3&gt;</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//第一个参数组件名称,第二个参数创建出来的组件模板对象</span></span>\n<span class="line"><span style="color:#A6ACCD;"> Vue.component(&#39;myComl&#39;,coml)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">my-coml</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">my-coml</span><span style="color:#89DDFF;">/&gt;</span></span>\n<span class="line"></span></code></pre></div><p>2.使用 <code>vue.component</code> 来创建组件</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Vue.component(&#39;mycom2&#39;,{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">template:&#39;</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    这是直接使用Vue.component 创建出来的组件</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">&#39;    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">})</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><p>3.使用 <code>template</code> 来创建组件</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tmp1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> 这里通过template元素,在外部定义的组件结构,这个方式,有代码的智能提示和高量</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> Vue.component(&#39;mycom3&#39;,{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  template:&#39;#tem1&#39;   </span></span>\n<span class="line"><span style="color:#A6ACCD;"> })</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><ol start="4"><li>私有组件 <code>componment</code></li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">temp2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">这是私有login组件</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">componment:{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> login:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   template:&#39;tmpl2&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><ol start="5"><li>函数式组件 <code>componment</code></li></ol><p>子</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*eslint-disable*/</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//VueJSX的写法</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//--最主要最关键的原因是函数式组件不需要实例化，无状态，没有生命周期，所以渲染性能要好于普通组件</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//--函数式组件结构比较简单，代码结构更清晰</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 通过配置functional属性指定组件为函数式组件</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">functional</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 组件接收的外部属性</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">avatar</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">    * 渲染函数</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">    * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">*</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">h</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">    * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">*</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#676E95;font-style:italic;"> 函数式组件没有this, props, slots等都在context上面挂着</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">    */</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">render</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">props</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">avatar</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">avatar</span><span style="color:#89DDFF;">}&gt;&lt;/</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">={</span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/assets/logo.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}&gt;&lt;/</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>父</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;template v-if=&quot;type === &#39;name&#39;&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;label&gt;用户名：&lt;/label&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名...&quot; /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;template v-else&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;label&gt;邮箱：&lt;/label&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;input type=&quot;text&quot; placeholder=&quot;请输入邮箱...&quot; /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;button @click=&quot;handleToggleClick&quot;&gt;切换输入类型&lt;/button&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;fuc&gt;&lt;/fuc&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;img src=&quot;@/assets/logo.png&quot; /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">import fuc from &#39;./fuc.js&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">export default {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  name: &#39;KeyTest&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  components: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    fuc</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  data () {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      type: &#39;name&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  methods: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    handleToggleClick () {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      this.type = this.type === &#39;name&#39; ? &#39;mail&#39; : &#39;name&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--我不想用JSX，能用函数式组件吗？</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">在Vue2.5之前，使用函数式组件只能通过JSX的方式，在之后，可以通过模板语法来生命函数式组件--&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--在template 上面添加 functional属性--&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">functional</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">props.avatar ? props.avatar : require(&#39;@/assets/logo.png&#39;)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--可以省略声明props--&gt;</span></span>\n<span class="line"></span></code></pre></div><ul><li><p>如果使用了<code>Vue.component</code> 定义了全局组件的时候,组件名称使用了驼峰命名，在引用的时候大写的驼峰要改为小写,同时两个单词之间 使用-链接</p></li><li><p><code>Vue.component</code>第一个参数:组件的名称,将来在引用组件的时候，就是一个标签形式来引入的,第二个参数： <code>Vue.extend</code> 创建的组件，其中 <code>template</code>就是组件将来要展示的内容</p></li><li><p>注意:不论是哪种方式创建出来的组件,组件的<code>template</code> 属性指向的模板内容,必须有且只能有唯一的一个根元素。</p></li></ul><h4 id="_15-组件里的data" tabindex="-1">15 组件里的<code>data</code> <a class="header-anchor" href="#_15-组件里的data" aria-label="Permalink to &quot;15 组件里的`data`&quot;">​</a></h4><ol><li>组件可以有自己的<code>data</code>数据</li><li>组件的<code>data</code>和实例中的<code>data</code>有点不一样,实例中的<code>data</code> 可以为一个对象,但是组件中的<code>data</code>必须是一个方法。</li><li>组件中的<code>data</code> 除了必须为一个方法之外,这个方法内部,还必须返回一个对象才行。</li><li>组件中的<code>data</code>数据,使用方式，和实例中的<code>data</code>使用方式完全一样!</li><li>组件里<code>data</code>为什么必须是个方法返回个对象呢？ 因为要确保每个<code>实例</code>里的数据是唯一的,独有的。如果<code>data</code>里的数据是放在<code>实例外部</code>的,会被<code>其他实例</code>共享。</li></ol><h4 id="_16-组件切换" tabindex="-1">16 组件切换 <a class="header-anchor" href="#_16-组件切换" aria-label="Permalink to &quot;16 组件切换&quot;">​</a></h4><ol><li>组件里的切换 可以用 <code>v-if</code> 和 <code>v-else</code> 进行切换 即标签页切换</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click.prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag=true</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;"> &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> 登录</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#C792EA;">@click.prevent</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag=flase</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> 注册</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">login</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">login</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">register</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-else</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">flag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">register</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><ol start="2"><li><code>vue</code> 提供了 <code>component</code>，来展示对应名称的组件</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//component 是一个占位符</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">:is属性</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">可以用来指定要展示的组件的名称 写死的时候这个组件名要是个字符串</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">动态绑定时key普通写法就好</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">但value必须是字符串。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :is=&quot;&#39;componentId&#39;&quot;&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/component&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;component :is=&quot;oneName&quot;&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/component&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">data(){</span></span>\n<span class="line"><span style="color:#89DDFF;">    return{</span></span>\n<span class="line"><span style="color:#89DDFF;">     oneName:&quot;login&quot;,</span></span>\n<span class="line"><span style="color:#89DDFF;">    }</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h4 id="_17-父子组件通讯" tabindex="-1">17 父子组件通讯 <a class="header-anchor" href="#_17-父子组件通讯" aria-label="Permalink to &quot;17 父子组件通讯&quot;">​</a></h4><ol><li><p>父子组件传值,通过<code>v-bind:(:)</code>来传值，通过<code>props</code>来接收值</p></li><li><p>父组件用事件绑定机制传递<code>方法</code>给子组件—<code>v-on</code> 简写 <code>@</code></p></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//父组件中</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">component-name</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">  :children=&#39;children&#39;  </span><span style="color:#676E95;font-style:italic;">//传值</span></span>\n<span class="line"><span style="color:#89DDFF;">  @handle=&#39;show&#39;  </span><span style="color:#676E95;font-style:italic;">//绑定方法</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">component-name</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">data</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        children</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">11</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">  </span></span>\n<span class="line"><span style="color:#F07178;">      </span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">methods</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">      </span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">show</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          </span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"></span></code></pre></div><ol start="3"><li><code>emit</code> 英文原意: 是触发,调用,发射的意思。 <code>@handle=show</code> 父组件传<code>show</code>方法给子组件。 子组件接收父组件的方法,并用<code>$emit</code>把子组件的值传给父组件</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//子组件中</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">methods</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">handle</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">handle</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,{</span></span>\n<span class="line"><span style="color:#F07178;">            age</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">搞事</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ol start="4"><li>在父组件中接收子组件所有参数的同时，添加自定义参数</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">子组件传出单个参数时：</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 子组件</span></span>\n<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,this.</span><span style="color:#A6ACCD;">param)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 父组件</span></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test($event,userDefined)</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">子组件传出多个参数时：</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 子组件</span></span>\n<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,this.</span><span style="color:#A6ACCD;">param1，</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">param2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">param3)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 父组件 arguments 是以数组的形式传入</span></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test(arguments,userDefined)</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">可传出个对象</span></span>\n<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,{</span><span style="color:#F07178;">param1</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">param1</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">param1</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips：子组件中的<code>data</code>数据,并不是通过 父组件传递过来的,而是子组件自身私有的,比如子组件通过<code>ajax</code>,请求回来的数据,都可以放到<code>data</code>身上,<code>data</code> 上的数据都是可读可写的;</p></blockquote><p>4.使用.sync来使子组件修改父组件(props)的值</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">**在父组件中,直接在需要传递的属性后面加上.sync**</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;test4 :word.sync=&quot;word&quot;/&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">**在子组件中**</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;h3&gt;{{word}}&lt;/h3&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;input type=&quot;text&quot; v-model=&quot;str&quot; /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">export default {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  props: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    word: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      type: String,</span></span>\n<span class="line"><span style="color:#A6ACCD;">      default: &#39;&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  data() {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      str: &#39;&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  watch: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    str(newVal, oldVal) {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      //使用update事件来更新word,而在父组件不需要调用该函数。</span></span>\n<span class="line"><span style="color:#A6ACCD;">      this.$emit(&#39;update:word&#39;, newVal);</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>tips: this.$emit(&#39;update:word&#39;, newVal);这个方法可不放在监听器里，父组件必须使用加上sync。如果还遇到不能修改props的警告，要再把props的值赋值给data里的值再监听，即可解决问题</p></blockquote><ol start="5"><li>$attrs和$listeners</li></ol><ul><li><code>v-bind=&quot;$attrs&quot;</code> 将父组件中不被认为 <code>props</code>特性绑定的属性传入子组件中</li><li><code>v-on=&quot;$listeners&quot;</code> 未识别的事件可通过<code>v-on=&quot;$listeners&quot;</code>传入（.native绑原生事件是没用的）</li></ul><blockquote><p>主要用于高级组件的封装</p></blockquote><h4 id="_18-使用-ref-获取dom元素" tabindex="-1">18 使用 ref 获取dom元素 <a class="header-anchor" href="#_18-使用-ref-获取dom元素" aria-label="Permalink to &quot;18  使用 ref 获取dom元素&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myh3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myh3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h3</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">methods</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">getElement</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">( </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">myh3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//组件也可以使用ref,让父组件调用子组件里的方法和属性值</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">login</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mylogin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">login</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">methods</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">getElement</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">     </span><span style="color:#676E95;font-style:italic;">//父组件调用子组件里的属性值</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mylogin</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:</p><ol><li><code>refs</code>; <code>s</code>代表多个引用,会有多个<code>dom</code>元素。</li><li><code>ref</code>英文是<code>reference</code>,值类型和引用类型。</li></ol></blockquote><h4 id="_19-路由" tabindex="-1">19 路由 <a class="header-anchor" href="#_19-路由" aria-label="Permalink to &quot;19 路由&quot;">​</a></h4><p>1.这是<code>vue-router</code>提供的元素,专门用来 当作占位符的, 将来,路由规则,匹配到的组件,就会展示到这个<code>router-view</code>中去,所以:我们可以把router-view认为是一个占位符</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>2.路由切换 模板写法,默认渲染为一个<code>a</code>标签, 使用<code>tag</code>的<code>span</code>可以用来转换模板的标签名</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">span</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">登录</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">router-link</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>3.路由配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">VueRouter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//路由匹配规则</span></span>\n<span class="line"><span style="color:#F07178;">routes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">redirect</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">login</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">login</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/register</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">register</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">]  </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//路由高亮的类名</span></span>\n<span class="line"><span style="color:#A6ACCD;">linkActiveClass:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myactive</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> vm</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">el</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:{},</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:{},</span></span>\n<span class="line"><span style="color:#A6ACCD;"> router </span><span style="color:#676E95;font-style:italic;">//将路由规则对象注册到vm实例上,用来监听Url地址的变化，然后展示对应的组件。</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><p>4.路由传参</p><ol><li><code>query</code></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//跳转并传值</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">TeacherDetail</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//组件名</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">query</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">scaleId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//在TeacherDetail组件中接收scaleId</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$route</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scaleId </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:接收参数和跳转路由的主体对象不同，跳转是$router,接收是$route,不要搞混了</p></blockquote><ol start="2"><li>在<code>path</code>上设置参数</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//参数要一一对应不可缺失,不然可能会</span></span>\n<span class="line"><span style="color:#A6ACCD;">造成路由的不匹配</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login/12/ls</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/login/:id/:name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">login</span><span style="color:#F07178;">   </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>5.子路由</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-link</span></span>\n<span class="line"><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/account/login</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">router-link</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">routes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/account</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">account</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">login</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">login</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">] </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:</p><ul><li>每个路由规则,都是一个对象,这个规则对象,身上,有两个必须的属性。</li><li>属性1 是<code>path</code>,表示监听,哪个路由链接地址;</li><li>属性2是<code>component</code>,表示,如果路由是前面匹配到的path,则展示<code>component</code>属性对应的那个组件。</li><li>子路由不能加<code>/</code>, 加了/ 会以根目录为基准匹配,这样不方便我们用户去理解<code>url</code>地址</li><li>超链接的<code>to</code> 一定要加上父路由</li></ul></blockquote><p>==注意==:<strong><code>componen</code>属性值，必须是一个组件的模板对象,不能是组件的引用名称</strong></p><p>6.动态路由(router.addRoutes)更新路由信息以及获取路由信息</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//子路由--循环的子项</span></span>\n<span class="line"><span style="color:#A6ACCD;">  router</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">routes[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> (menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">iframe</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">iframe</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">evecom-scplatform-front/src/module/</span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">}`</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resolve)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">icon</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">keepAlive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//父路由--循环的子项     </span></span>\n<span class="line"><span style="color:#A6ACCD;">  router</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">routes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/iframe/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> (menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">iframe</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">iframe</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">evecom-scplatform-front/src/module/</span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">}`</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resolve)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> menu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">icon</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">keepAlive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//打印注册的路由信息</span></span>\n<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$router</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">routes) </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips: 使用<code>router.addRoutes(routes)</code>方法，并不能更新路由信息，此时还应该用<code>router.options.routes.push()</code>手动添加路由信息。</p></blockquote><p>7.重复点击路由时发生警告错误的解决方法</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 去除路由重复点击时发生的错误警告</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> originalPush </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">VueRouter</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">push</span></span>\n<span class="line"><span style="color:#FFCB6B;">VueRouter</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">location</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">originalPush</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">location</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h4 id="_20-命名视图实现经典布局" tabindex="-1">20 命名视图实现经典布局 <a class="header-anchor" href="#_20-命名视图实现经典布局" aria-label="Permalink to &quot;20 命名视图实现经典布局&quot;">​</a></h4><p>根据<code>name</code> 来找组件</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> header</span><span style="color:#89DDFF;">={</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;h1&gt;header&lt;/h1&gt;</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> leftBox</span><span style="color:#89DDFF;">={</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;h1&gt;leftBox&lt;/h1&gt;</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> mainBox</span><span style="color:#89DDFF;">={</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;h1&gt;mainBox&lt;/h1&gt;</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">components</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">header</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">leftBox</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#A6ACCD;">mainBox</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h4 id="_21-watch" tabindex="-1">21 watch <a class="header-anchor" href="#_21-watch" aria-label="Permalink to &quot;21 watch&quot;">​</a></h4><p>监听非<code>dom</code>元素</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">watch</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">obj.a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">newValue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">oldValue</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#FFCB6B;">immediate</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">  </span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">watch</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">obj</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              handler </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newValue</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">oldValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">deep</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">//深程度监听 性能消耗大</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">watch</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//监听路由</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$route.path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              handler </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newValue</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">oldValue</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">//immediate:true代表如果在 wacth 里声明了之后，就会立即先去执行里面的handler方法，如果为 false就跟我们以前的效果一样，不会在绑定的时候就执行</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">immediate</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">   </span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:</p><ul><li>用了<code>obj.a</code> 加上<code>handle +immediate：true</code> ,就可以监听 对象里的值，如果是<code>obj</code> 加上 <code>handle+deep true</code> 也是可以监听对象的属性但是性能消耗大 一般是直接对象&gt; &gt; +属性</li><li>用<code>handle</code> 方法可以让<code>watch</code>初始化就执行,如果不用 handle它就先不执行,待数据改变再执行。</li><li>不要在<code>watch</code> 和<code>computer</code> 中去修改参与计算或者监听的值 而是要生成新的值。</li></ul></blockquote><h4 id="_22-computed-计算属性" tabindex="-1">22 <code>computed</code> 计算属性 <a class="header-anchor" href="#_22-computed-计算属性" aria-label="Permalink to &quot;22 `computed`  计算属性&quot;">​</a></h4><ul><li>不传参的计算属性</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isShowExpand</span><span style="color:#F07178;"> () </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">winWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">maxWinWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li>传参的计算属性</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">label</span></span>\n<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> eve-btn-combination__from-lable</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[checkHidden(index) ? &#39;eve-btn-combination__display-none&#39;: &#39;eve-btn-combination__display-block&#39;]</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">     &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     {{ item.label }}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">label</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span></span>\n<span class="line"><span style="color:#A6ACCD;">computed: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">   checkHidden () {</span></span>\n<span class="line"><span style="color:#A6ACCD;">     // 闭包传值,index是传进来的参数</span></span>\n<span class="line"><span style="color:#A6ACCD;">      return function (index) {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          return (index === 2 &amp;&amp; this.winWidth &lt;= this.maxWinWidth &amp;&amp; this.isHidden) || (index &gt; 2 &amp;&amp; this.isHidden)</span></span>\n<span class="line"><span style="color:#A6ACCD;">         }</span></span>\n<span class="line"><span style="color:#A6ACCD;">     }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"></span></code></pre></div><h4 id="_23-render-函数注册组件-vm-vue实例-的属性" tabindex="-1">23. <code>render</code> 函数注册组件（<code>vm</code>[<code>vue</code>实例]的属性) <a class="header-anchor" href="#_23-render-函数注册组件-vm-vue实例-的属性" aria-label="Permalink to &quot;23. `render` 函数注册组件（`vm`[`vue`实例]的属性)&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">render</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">createElements</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//createElements是一个方法,调用它,能够把指定的 组件模板 渲染为html结构</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createElements</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">login</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//注意 这里 return 的结果,会替换页面中el 指定的那个容器</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li>封装按钮组件</li></ul><p>// 创建一个button.vue文件 写法如下</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> export default {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  //接收外部值    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  props:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        type:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            type:String,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            default:&#39;normal&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        text:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            type:String,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            default:&#39;button&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">   },</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span></span>\n<span class="line"><span style="color:#A6ACCD;">render(h){</span></span>\n<span class="line"><span style="color:#A6ACCD;">    /*h类似于createElement: 1-元素,2-选项*/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  return h(&#39;button&#39;,{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     class:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">             btn:true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &#39;btn-success&#39;:this.type === &#39;success&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &#39;btn-danger&#39;:this.type === &#39;danger&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &#39;btn-warning&#39;:this.type === &#39;warning&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &#39;btn-normal&#39;:this.type === &#39;normal&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    //组件显示的值--dom属性</span></span>\n<span class="line"><span style="color:#A6ACCD;">     domProps:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">           innerText: this.text || &#39;default&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    //发射方法 </span></span>\n<span class="line"><span style="color:#A6ACCD;">      on:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">             click:this.handleClick</span></span>\n<span class="line"><span style="color:#A6ACCD;">         }</span></span>\n<span class="line"><span style="color:#A6ACCD;">       })</span></span>\n<span class="line"><span style="color:#A6ACCD;">     },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    methods:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    //传给父组件的方法</span></span>\n<span class="line"><span style="color:#A6ACCD;">        handleClick(){</span></span>\n<span class="line"><span style="color:#A6ACCD;">            this.$emit(&#39;myClick&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;style scoped&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">.btn{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    width: 100px;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    height:40px;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    line-height:40px;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    border:0px;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    border-radius:5px;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    color:#ffff;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">.btn-success{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    background:#2ecc71;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">.btn-danger{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    background:#e74c3c;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">.btn-warning{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    background:#f39c12;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">.btn-normal{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    background:#bdc3c7;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/style&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//  引入</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;Button type=&#39;success&#39; text=&#39;myButton&#39; @myClick=&#39;...&#39;&gt;&lt;/Button&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;/div&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">import Button from &#39;./button.vue&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">export default {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  name: &#39;Home&#39;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  data(){</span></span>\n<span class="line"><span style="color:#A6ACCD;">    return{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  components:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      Button</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  methods:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/script&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;style scoped lang=&quot;less&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;/style&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>tips: <code>render</code>和<code>components</code>区别 <code>render</code> 会把整个<code>app</code>里组件全部覆盖掉一个<code>app</code>中只能放一个<code>render</code>组件<code>components</code> 可以多个,且不会覆盖</p></blockquote><ul><li>render 的写法、使用方法。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">render</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">//和`v-bind:class`一样的 API</span></span>\n<span class="line"><span style="color:#F07178;">              class</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                bar</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">//和`v-bind:style`一样的 API</span></span>\n<span class="line"><span style="color:#F07178;">              style</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                color</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                fontSize</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14px</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 正常的 HTML 特性</span></span>\n<span class="line"><span style="color:#F07178;">              attrs</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 组件 props</span></span>\n<span class="line"><span style="color:#F07178;">              props</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                myProp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// DOM 属性</span></span>\n<span class="line"><span style="color:#F07178;">              domProps</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                innerHTML</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">baz</span><span style="color:#89DDFF;">&#39;</span><span style="color:#676E95;font-style:italic;">//显示值</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 事件监听器基于 `on`</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 所以不再支持如 `v-on:keyup.enter` 修饰器</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 需要手动匹配 keyCode。</span></span>\n<span class="line"><span style="color:#F07178;">              on</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                click</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">clickHandler</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 仅对于组件，用于监听原生事件，而不是组件内部使用</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// `vm.$emit` 触发的事件。</span></span>\n<span class="line"><span style="color:#F07178;">              nativeOn</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                click</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">nativeClickHandler</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 自定义指令。注意，你无法对 `binding` 中的 `oldValue`</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 赋值，因为 Vue 已经自动为你进行了同步。</span></span>\n<span class="line"><span style="color:#F07178;">              directives</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                  name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-custom-directive</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                  value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                  expression</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1 + 1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                  arg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">                  modifiers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                    bar</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">                  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">              ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// Scoped slots in the form of</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// { name: props =&gt; VNode | Array&lt;VNode&gt; }</span></span>\n<span class="line"><span style="color:#F07178;">              scopedSlots</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">props</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">h</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">span</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 如果组件是其他组件的子组件，需为插槽指定名称</span></span>\n<span class="line"><span style="color:#F07178;">              slot</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name-of-slot</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// 其他特殊顶层属性</span></span>\n<span class="line"><span style="color:#F07178;">              key</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myKey</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              ref</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myRef</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li>render 函数式组件</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">functional</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 表格的某一行数据</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">render</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Function</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//render方法</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">index</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//下标</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">item</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Array </span><span style="color:#676E95;font-style:italic;">//表格里所有数据</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">h</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">params</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            row</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            index</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">) </span><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">item</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">params</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h4 id="_24-slot-插槽" tabindex="-1">24. <code>slot</code> 插槽 <a class="header-anchor" href="#_24-slot-插槽" aria-label="Permalink to &quot;24. `slot` 插槽&quot;">​</a></h4><p>1.写插槽</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout === &#39;block&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout-block</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scroll?&#39;layout-scroll&#39;:&#39;&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  //匿名插槽</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 左右块 --&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout === &#39;both&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">d-flex jc-between</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout-both</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scrollLeft?&#39;layout-scroll&#39;:&#39;&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> //有名字的插槽</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout-both</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scrollRight?&#39;layout-scroll&#39;:&#39;&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">    </span></span>\n<span class="line"></span></code></pre></div><p>2.使用插槽</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  //有名字的插槽 # v-slot的缩写是#</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">#left</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-slot</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips 区别对待v-slot=&quot;&quot; 和v-slot:name; =和:的区别 一个是slot的name 一个是父组件获取子组件的数据,插槽一定要用 template包裹着</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> 插槽的内容</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><ol start="3"><li>作用域 slot-scope、v-slot/#(推荐)</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> //子组件</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;slot :node=&quot;node&quot; :data=&quot;data&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">     &lt;span&gt;{{ node.label }}&lt;/span&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &lt;span&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;() =&gt; append(data)&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">              Append</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &lt;/el-button&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &lt;el-button</span></span>\n<span class="line"><span style="color:#A6ACCD;">              type=&quot;text&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">              size=&quot;mini&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">              @click=&quot;() =&gt; remove(node, data)&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">              Delete</span></span>\n<span class="line"><span style="color:#A6ACCD;">            &lt;/el-button&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &lt;/span&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  &lt;/slot&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  //父组件</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;eve-tree ref=&quot;tree&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;template v-slot=&quot;{ node, data }&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &lt;span&gt;{{ node.label }}&lt;/span&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;() =&gt; append(data)&quot;&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">          Append</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &lt;/el-button&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &lt;/template&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &lt;/eve-tree&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>tips: 用v-slot插槽里写好的样式不会乱掉,用slot-scope样式会不起作用。 v-slot:default 针对的是匿名的插槽</p></blockquote><hr><h4 id="_25-minixs-混合" tabindex="-1">25. <code>minixs</code> 混合 <a class="header-anchor" href="#_25-minixs-混合" aria-label="Permalink to &quot;25. `minixs` 混合&quot;">​</a></h4><p>共享方法、参数、生命周期等</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//mixin</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mixin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">created</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我是混入的</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">isWeixin</span><span style="color:#F07178;">()) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// alert(1)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">isWeixin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ua</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">userAgent</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLowerCase</span><span style="color:#F07178;">()</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isWeixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ua</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">micromessenger</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isWeixin</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> mixin</span></span>\n<span class="line"></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// import mixin from &#39;@/core/mixin&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">//全局引入-main.js</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">var vue = new Vue({</span></span>\n<span class="line"><span style="color:#A6ACCD;">  mixins: [mixin],</span></span>\n<span class="line"><span style="color:#A6ACCD;">  router,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  store,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  render: h =&gt; h(App)</span></span>\n<span class="line"><span style="color:#A6ACCD;">}).$mount(&#39;#app&#39;)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">export default vue</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 局部引入</span></span>\n<span class="line"><span style="color:#A6ACCD;">// import mixin from &#39;@/core/mixin&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">export default {</span></span>\n<span class="line"><span style="color:#A6ACCD;"> mixins: [mixin],</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="_26-props-细谈" tabindex="-1">26. <code>props</code> 细谈 <a class="header-anchor" href="#_26-props-细谈" aria-label="Permalink to &quot;26. `props` 细谈&quot;">​</a></h4><p><code>props</code>,接收父组件传进来的参数，类型有很多，包括：<code>Number</code>、<code>Object</code>、<code>Function</code>、<code>Array</code>、<code>Boolean</code>等类型，其中稍微注意以下两种类型</p><ul><li>当类型为<code>function</code>时当默认值里有<code>this</code>时，不能写成箭头函数，要写成普通函数，否则<code>this</code>的指向会变成父组件</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">onExceed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Function</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;">: </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">files</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">fileList</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$message</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">当前限制选择 3 个文件，本次选择了 </span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> 个文件，共选择了 </span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">files</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> fileList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> 个文件</span><span style="color:#89DDFF;">`</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ul><li>当类型为<code>Object</code>时当默认值里有值时要加个小括号,不加小括号报错</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">onExceed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">         value</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="_2-杂项" tabindex="-1">2.杂项 <a class="header-anchor" href="#_2-杂项" aria-label="Permalink to &quot;2.杂项&quot;">​</a></h2><h4 id="_1-nrm" tabindex="-1">1. nrm <a class="header-anchor" href="#_1-nrm" aria-label="Permalink to &quot;1. nrm&quot;">​</a></h4><p>安装 <code>nrm</code></p><ul><li><code>npm i nrm -g</code> 全局安装</li><li><code>nrm ls</code> 显示列表</li><li><code>nrm use npm</code> 使用<code>npm use</code> 后有很多地址可选择</li></ul><blockquote><p>tips:<code>nrm</code>只是单纯的提供几个常用的下载包<code>url</code>地址,并能够让我们在这几个地址之前,很方便的进行切换，但是，我们每次装包的时候，使用的装包工具，都是<code>npm</code>。和</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i cnpm -g  不一样</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>新增地址</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nrm add 自定义名字 镜像地址</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>删除地址</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nrm del 镜像名</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>测试源速度</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">nrm test  &lt;registry&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="_2-webpack" tabindex="-1">2. webpack <a class="header-anchor" href="#_2-webpack" aria-label="Permalink to &quot;2. webpack&quot;">​</a></h4><p>在网页中会引用哪些常见的静态资源</p><ul><li><p>js</p><ul><li>.js .jsx .coffee .ts(TypeScript)</li></ul></li><li><p>css</p><ul><li>.css .less .sass .scss</li></ul></li><li><p>Image</p><ul><li>.jpg .png .gif .bmp .svg</li></ul></li><li><p>字体文件(Fonts)</p><ul><li>.svg .ttf .eof .woff .woff2</li></ul></li><li><p>模板文件</p><ul><li>.ejs .jade .vue</li></ul></li></ul><h4 id="_3-热部署" tabindex="-1">3. 热部署 <a class="header-anchor" href="#_3-热部署" aria-label="Permalink to &quot;3. 热部署&quot;">​</a></h4><p><code>webpack-dev-server</code> 实现自动打包功能,浏览器不用刷新也能看到文件已经修改,打包的文件并没有放在实际的物理磁盘上,而是直接托管到了，电脑的内存中,所以,我们在项目根目录中,根本找不到这个打包好的文件,这文件和<code>src</code>、 <code>dist</code>、 <code>node_modules</code> 平级,有一个看不见的文件</p><h4 id="_4-热更新" tabindex="-1">4. 热更新 <a class="header-anchor" href="#_4-热更新" aria-label="Permalink to &quot;4. 热更新&quot;">​</a></h4><p><code>hot</code> 网页不重载 直接更新 加快打包速度 不生成新文件</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack-dev-ser  ver --open --prot       3000 --contentBase src --hot </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">     </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>配置文件中配置热更新</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#FFCB6B;">devServer</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#FFCB6B;">hot</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">就热更新了</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:<code>webpack</code>当中带<code>s</code>都是数组</p></blockquote><h4 id="_5-webpack引入vue" tabindex="-1">5.<code>webpack</code>引入<code>vue</code> <a class="header-anchor" href="#_5-webpack引入vue" aria-label="Permalink to &quot;5.`webpack`引入`vue`&quot;">​</a></h4><p>在 <code>webpack</code> 中 使用以下方式导入的<code>Vue</code> 构造函数,功能并不完善,只提供了 <code>runtime-only</code>的方式,并没有提供 像网页中那样的使用方式;</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//阉割版</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//齐全版</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../node_modules/vue/dist/vue.js</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">module.exports={</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">resolve</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//设置 Vue被导入的时候的包的路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">alias</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">vue$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue/dist/vue.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips: 包的查找规则:</p><ul><li>找项目根目录中有没有<code>node_modules</code>的文件夹</li><li>在 <code>node_modules</code> 中 根据包名,找对应的<code>vue</code>文件夹</li><li>在<code>vue</code>文件夹中，找一个叫做<code>package.json</code> 的包配置文件</li><li>在<code>package.json</code> 文件中,查找一个<code>main</code>属性[<code>main</code>属性指定了这个包在被加载时候的入口文件]</li><li>改了<code>webpake</code>的包就需要重新运行项目</li></ul></blockquote><h4 id="_6-在webpack中通过render展示组件" tabindex="-1">6.在<code>webpack</code>中通过<code>render</code>展示组件 <a class="header-anchor" href="#_6-在webpack中通过render展示组件" aria-label="Permalink to &quot;6.在`webpack`中通过`render`展示组件&quot;">​</a></h4><p>如果想要通过<code>vue</code>,把一个组件放到页面中去展示,<code>vm</code> 实例中的<code>render</code>函数可以实现</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">render</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">createElement</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;">  </span><span style="color:#82AAFF;">createElement</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">login</span><span style="color:#F07178;">) </span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//就一行可以省略{} 并且没有花括号默认就有return, </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">简写</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">render</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">c</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">c</span><span style="color:#A6ACCD;">(login)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips: <code>webpack</code>中 如何使用<code>Vue:</code></p><ol><li>安装<code>Vue</code>的包</li><li>由于在<code>webpack</code>中,推荐使用<code>.vue </code>这个组件模板文件定义组件,所以需要安装 能解析这种文件的<code>loader</code></li><li>在<code>main.js</code>中,导入<code>vue</code> 模块 <code>import Vue from &#39;vue&#39;</code></li><li>定义一个<code>.vue</code> 结尾的组件,其中,组件有三部分组成</li><li>使用 <code>import login from &#39;./login.vue&#39;</code> 导入这个组件</li><li>创建 <code>vm</code> 的实例 <code>var vm = new Vue</code> <code>({el:&#39;app&#39;,render:c=&gt;c(login)})</code></li><li>在页面中创建一个<code>id</code>为<code>app</code>的<code>div</code>元素,作为我们vm实例要控制的区域</li></ol></blockquote><h4 id="_7-export-default-和-export" tabindex="-1">7. <code>export default</code> 和 <code>export</code> <a class="header-anchor" href="#_7-export-default-和-export" aria-label="Permalink to &quot;7. `export default` 和 `export`&quot;">​</a></h4><ul><li><p><code>export default</code> 向外暴露的成员,可以使用任意的变量来接收</p></li><li><p>在一个模块中,<code>export default</code>只允许向外暴露1次</p></li><li><p>在一个模块中，可以同时使用 <code>export default</code> 和 <code>export</code> 向外暴露成员</p></li><li><p>使用 <code>export</code> 向外暴露的成员,只能使用{}的形式来接收,这种形式,叫做[按需导出]</p></li><li><p><code>export</code> 可以向外暴露多个成员,同时,如果某些成员,我们在<code>import</code>的时候,不需要,则可以不在 { }中定义</p></li><li><p>注意使用 <code>export</code> 导出的成员,必须严格按照导出时候的名称,来使用{ } 按需接收</p></li><li><p>使用 <code>export</code> 导出的成员，如果就想换个名称来接收,可以使用 as 来起别名</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">={</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">     b：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">2</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;"> }</span></span>\n<span class="line"><span style="color:#F07178;"> export default arr</span></span>\n<span class="line"><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/* export default {</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   这个暴露是错误的所以当前注释 一个js文件中只能暴露一次</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">    address:&#39;北京&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"> }</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;"> export title=1 </span></span>\n<span class="line"><span style="color:#F07178;"> import arr, {title as title1 } from  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">/xxx.js</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;"> </span></span>\n<span class="line"></span></code></pre></div><h4 id="_8-router" tabindex="-1">8. router <a class="header-anchor" href="#_8-router" aria-label="Permalink to &quot;8. router&quot;">​</a></h4><ul><li><p><code>render</code>会把<code>el</code>指定的容器中,所有的内容都清空覆盖,所有不要把路由的<code>router-view</code>和<code>router-link</code> 直接写到<code>el</code>所控制的元素中</p></li><li><p>注意 <code>app</code>这个组件，是通过<code>vm</code> 实例的<code>render</code> 函数,渲染出来的,<code>render</code>函数如果要渲染组件,渲染出来的组件,只能放到<code>el: &#39;#app&#39;</code>所指定的元素中;</p></li><li><p><code>Account</code> 和<code>GoodsList</code> 组件，是通过路由匹配监听到的,所以,这两个组件,只能展示到属于路由的</p></li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">router-view</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">中去</span></span>\n<span class="line"></span></code></pre></div><ul><li>子路由的应用场景在<code>标签页</code>切换</li></ul><h4 id="_9-scoped" tabindex="-1">9. <code>scoped</code> <a class="header-anchor" href="#_9-scoped" aria-label="Permalink to &quot;9. `scoped`&quot;">​</a></h4><ol><li>样式的 <code>scoped</code> 是通过 <code>css</code> 的属性选择器来实现的,在<code>vue</code>中的<code>scoped</code>属性的效果主要通过<code>PostCSS</code>转译实现,作用是实现了样式的模块化，防止样式全局污染。</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">aa</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">vsfp</span><span style="color:#89DDFF;">]{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">red</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ol start="2"><li>如何修改被scoped属性标识的样式 可以使用/deep/ 或 &gt;&gt;&gt; 样式穿透，本人常用/deep/ 常用于修改自己封装的组件库或者三方的组件库</li></ol><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  /deep/ </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">aa</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">blue</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:vsfp是哈希值</p></blockquote><h4 id="_10-promise" tabindex="-1">10. promise <a class="header-anchor" href="#_10-promise" aria-label="Permalink to &quot;10. promise&quot;">​</a></h4><ul><li>模拟 <code>promise</code></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFution</span><span style="color:#A6ACCD;">(aa</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">callback)</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">callback</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">aa</span><span style="color:#F07178;">)   </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFution</span><span style="color:#A6ACCD;">(aa</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">funtion</span><span style="color:#A6ACCD;">(res)</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  console.log (aa)</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><ul><li>异步操作</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">每当new一个Promise实例的时候,就会立即执行这个异步操作中的代码。也就是说,new的时候,除了能够得到一个promise实例之外,还会立即调用 我们为 Promise 构造函数传递的那个funtion,执行这个function中的异步操作代码。</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">可用一个函数包裹,这样就可以不立即执行,用函数执行</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>\n<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> promise</span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">reject</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">异步操作</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">ajax函数等</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">而且可以自由输出东西了</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">resolve</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">) </span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">getFunction</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">promise</span><span style="color:#89DDFF;">=new</span><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Promise</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">异步操作</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">ajax函数等</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">而且可以自由输出东西了</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">getFunction</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">){</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">err</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><p>和async和await的结合</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> async </span><span style="color:#82AAFF;">getFunction</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">aa</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getFunction</span><span style="color:#F07178;">()</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">aa</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips：在 <code>then</code>里面多写个返回错误的方法是不可取的。</p></blockquote><h4 id="_11-vuex" tabindex="-1">11. vuex <a class="header-anchor" href="#_11-vuex" aria-label="Permalink to &quot;11. vuex&quot;">​</a></h4><ul><li><p><code>vuex</code>是为了保存组件之间共享数据而诞生的,如果组件之间 有要共享的数据,可以直接挂载到<code>vuex</code>中,而不必通过父子组件之间传值了,如果组件的数据不需要共享,此时,这些不需要共享的私有数据,没有必要放到<code>vuex</code>中;</p></li><li><p><code>vuex</code>,存放共享数据,<code>data</code> 存放组件私有的数据 <code>props</code>存放父组件传过来的数据</p></li><li><p>操作<code>vuex</code>里的<code>state</code></p><ul><li>直接操作<code>store</code>里的属性值,不推荐这种做法<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">this.$store.state.属性值</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li><li>推荐只通过<code>mutations</code> 提供的方法,才能操作对应的数据,</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">mutations</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">increment</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">payload</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">count</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$store</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">commit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">方法名</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></li><li><p><code>vuex</code>里的<code>getters</code></p><p>如果<code>store</code>中<code>state</code>上的数据,在对外提供的时候,需要做一层包装,那么推荐使用<code>getters</code>。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">optCount:state=&gt;state.count</span></span>\n<span class="line"><span style="color:#A6ACCD;">this.$store.getters.***</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li></ul><blockquote><p>tips: <code>increment</code>方法里的 <code>state</code>是属于<code>vuex</code>里的<code>state</code>; <code>count</code>是<code>state</code>里的属性 ;<code>payload</code>外部传进来的值,用来修改<code>state</code>里属性的值.。最多支持只能传两个参数,可以是数组和对象。</p></blockquote><ul><li>如何监听vuex值的改变</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//引入组手函数 </span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mapState</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vuex</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// buttonType () {</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//   return this.$store.state.chat.buttonType;</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// }</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//定义一个computed，和上一行代码类似的操作</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">...</span><span style="color:#82AAFF;">mapState</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">chat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">chat</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">watch</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//监听值变化，又进行部分操作</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">chat.buttonType</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F07178;">handler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">newV</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">old</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">getButton</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">chat</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buttonType</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">buttonData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buttonData</span></span>\n<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">status</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">status</span></span>\n<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h4 id="_12-ngrok" tabindex="-1">12. ngrok <a class="header-anchor" href="#_12-ngrok" aria-label="Permalink to &quot;12. ngrok&quot;">​</a></h4><p>可以映射本地<code>80</code>端口,把本地的映射为外网 <a href="https://www.npmjs.com/package/ngrok" target="_blank" rel="noreferrer">npm地址</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//npm下载 --感觉下的有点慢 换个路径下比较好</span></span>\n<span class="line"><span style="color:#A6ACCD;"> npm install ngrok -g </span></span>\n<span class="line"><span style="color:#A6ACCD;">//命令</span></span>\n<span class="line"><span style="color:#A6ACCD;"> ngrok http 80</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>tips：需要开启本地服务器,映射后只是映射www路径,不是完整的程序路径需要自己去补充完整,如果在服务器中(appach)，有开启httpd-vhosts.conf，要用#关闭 <code>#Include conf/extra/httpd-vhosts.conf</code></p></blockquote><h4 id="_13-public-目录下的图片如何用-require引入" tabindex="-1">13.public 目录下的图片如何用 require引入 <a class="header-anchor" href="#_13-public-目录下的图片如何用-require引入" aria-label="Permalink to &quot;13.public 目录下的图片如何用 require引入&quot;">​</a></h4><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//第一种 图片质量小的可以自动转换为base64的</span></span>\n<span class="line"><span style="color:#A6ACCD;">img: require(&quot;@/../public/img/home/user.jpg &quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">//第二种 这里可以把最前面的 / 看做是public</span></span>\n<span class="line"><span style="color:#A6ACCD;">/img/abnormal/Trash.png </span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">即 public/img/abnormal/Trash.png</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>tips: @是指src目录 .. @的上一级目录,再进入public</p></blockquote><h4 id="_14-发布订阅模式" tabindex="-1">14.发布订阅模式 <a class="header-anchor" href="#_14-发布订阅模式" aria-label="Permalink to &quot;14.发布订阅模式&quot;">​</a></h4><p>可用于多个场景,比如兄弟组件间的数据传递，computer和watch 等无法监听的场景下</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//订阅 异步的 </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">msg</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">//输出hello word!</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//发布  </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">$emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello world!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div><h4 id="_15-require-context" tabindex="-1">15. require.context <a class="header-anchor" href="#_15-require-context" aria-label="Permalink to &quot;15. require.context&quot;">​</a></h4><p>一个<code>webpack</code>的<code>api</code>,通过执行<code>require.context</code>函数获取一个特定的上下文,可以使用这个<code>api</code>,它会遍历文件夹中的指定文件,然后自动导入,使得不需要每次显式的调用<code>import</code>导入模块</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//自动加载global全局目录下以.js结尾的文件</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> componentsContext </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> require</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">context</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./global</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">js</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> componentsContext</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">componentConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">componentsContext</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">component</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//兼容import export 和 require module.export 两种规范</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">componentConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">default</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">componentConfig</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//注册组件</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>directory</td><td>String</td><td>读取文件的路径</td></tr><tr><td>useSubdirectories</td><td>Boolean</td><td>是否遍历文件的子目录</td></tr><tr><td>regExp</td><td>RegExp</td><td>匹配文件的正则</td></tr></tbody></table><blockquote><p>tips: 参数按表格里的顺序</p></blockquote><h4 id="_16-http-server" tabindex="-1">16. http-server <a class="header-anchor" href="#_16-http-server" aria-label="Permalink to &quot;16. http-server&quot;">​</a></h4><ul><li>简介</li></ul><p>本地文件夹中直接打开的html文件一般都是file协议，当代码中存在http或https的链接时，HTML页面就无法正常打开，为了解决这种情况，可利用node.js中的http-server，开启一个本地服务，步骤如下：</p><ul><li>安装</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> npm install http</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">server </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">g</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><ul><li>使用</li></ul><p>终端进入目标文件夹，然后在终端输入：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//开启服务</span></span>\n<span class="line"><span style="color:#A6ACCD;">http</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">server </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//成功示例</span></span>\n<span class="line"><span style="color:#A6ACCD;">Starting up http</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> serving </span><span style="color:#89DDFF;">./</span></span>\n<span class="line"><span style="color:#A6ACCD;"> Available </span><span style="color:#FFCB6B;">on</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//127.0.0.1:8080</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//192.168.8.196:8080</span></span>\n<span class="line"><span style="color:#A6ACCD;">Hit CTRL</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">C to stop the server</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//关闭服务</span></span>\n<span class="line"><span style="color:#A6ACCD;">按快捷键CTRL</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">C</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips 开启服务只输入http-server的话，更新了代码后，页面不会同步更新</p></blockquote><hr><h2 id="_3-性能优化建议" tabindex="-1">3.性能优化建议 <a class="header-anchor" href="#_3-性能优化建议" aria-label="Permalink to &quot;3.性能优化建议&quot;">​</a></h2><ol><li><p><code>watch</code>如果是obj 加上 <code>handle+deep true</code> 也是可以监听对象的属性但是性能消耗大</p></li><li><p><code>computer</code> 里生成的值 会有缓存 不建议用函数去处理一些值得计算 而是用 <code>computer</code> 来计算值，这样性能高。</p></li><li><p><code>:key =&#39;id&#39;</code><br> id是列表返回的id 如果没有id 就写item 一般不建议 写 index (eslint会有警告错误信息) 写上key 是为了减少消耗 它会有个缓存。</p></li><li><p><code>v-once</code> 和 <code>v-model</code> 的区别是 只会绑定一次 不会重新更新内容 可以 减少开销 应用场景：只读场景,不进行修改页面内容的时候</p></li><li><p><code>v-for</code> 和 <code>v-if</code> 不适合在同个div连用</p></li></ol><ul><li>可在最外层套用一层<code>template</code>来解决</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(column, index) in btn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">el-button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">size</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">small</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                       </span><span style="color:#C792EA;">:type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">column.type</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">                       </span><span style="color:#C792EA;">:plain</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">column.plain</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">                       </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">!isEmpty(column.style)&amp;&amp;[scope.$index + (currentPage - 1) * pageSize==column.style.index?column.style.className:&quot;&quot;] </span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">                       </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handle(id&amp;&amp;!column.isGetAll?scope.row[id]:scope.row,column.lable,scope.$index + (currentPage - 1) * pageSize)</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">                       </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">              {{column.lable}}</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">el-button</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><ol start="6"><li><p><code>this.$parent</code> 可修改父组件值,但不建议,只读就好</p></li><li><p><code>gzip</code> 优化</p></li></ol><ul><li><code>vue</code>配置 在前端生成带有<code>gz</code>的文件</li><li>辅助插件:<code>compression-webpack-plugin</code></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//当前的配置不适用于最新版本插件的配置，可用于5.0.1版本。</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> CompressionWebpackPlugin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">compression-webpack-plugin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> productionGzipExtensions </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> isProduction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">configureWebpack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isProduction</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CompressionWebpackPlugin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          algorithm</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">gzip</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          test</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">.(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">productionGzipExtensions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">|</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)$</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          threshold</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10240</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          minRatio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.8</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">      )</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:有些人会疑惑后端开启gzip，就会将相应文件压缩，浏览器就能识别，就已经起到优化的效果了,前端为什么还要压缩？</p></blockquote><blockquote><ol><li>nginx给你返回js文件的时候，会判断是否开启gzip，然后压缩后再还给浏览器。但是nginx其实会先判断是否有.gz后缀的相同文件，有的话直接返回，不自己压缩。</li><li>压缩是要时间的！不同级别的压缩率花的时间也不一样。所以提前准备gz文件，可以降低服务器压缩的负担，更加优化。而且可以把压缩率提高点，这样带宽消耗会更小。</li></ol></blockquote><p>ngnix服务端配置</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//配合前端的gzip</span></span>\n<span class="line"><span style="color:#A6ACCD;">  在站点配置添加如下代码：</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    location ~* \\.(css|js)$ </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">       gzip_static on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">    这是 nginx 的静态 gzip功能，会自动查找对应扩展名的文件，如果存在 gzip 文件，就使用，如果没有就用原文件</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//后端返回gzip</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_static  on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_min_length  </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">k;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_buffers     </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;">k;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_http_version </span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_comp_level </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_vary on;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_proxied   expired no-cache no-store private auth;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    gzip_disable   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MSIE [1-6]\\.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>\n<span class="line"></span></code></pre></div><ol start="8"><li><code>cdn</code>加速</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/vue@2.6.10/dist/vue.runtime.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/vuex@3.0.1/dist/vuex.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/vue-router@3.0.3/dist/vue-router.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/axios@0.19.0/dist/axios.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">    &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/element-ui@2.9.2/lib/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//有了config就按以下配置</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">configureWebpack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//cdn </span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">externals</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      vue</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      vuex</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Vuex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">vue-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">VueRouter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      axios</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isProduction</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CompressionWebpackPlugin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          algorithm</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">gzip</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          test</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">.(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">productionGzipExtensions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">|</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)$</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          threshold</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10240</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          minRatio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.8</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">      )</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ol start="9"><li>网页中引入的静态资源多了以后有什么问题?</li></ol><ul><li>网页加载速度慢, 因为我们要发起很多的<code>二次</code>请求;</li><li>要处理错综复杂的依赖关系</li></ul><blockquote><p>解决方案:</p><ol><li>合并、压缩、精灵图、图片的<code>base64</code>编码 、<code>cdn</code></li><li>可以使用之前学过的<code>requireJs</code>、也可以使用<code>webpack</code></li></ol></blockquote><ol start="10"><li>建立不同的环境变量(开发、测试、正式)</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">一、建立环境配置文件</span></span>\n<span class="line"><span style="color:#A6ACCD;">在package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 同级的目录下 建立3个文件</span></span>\n<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">development  </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">开发环境</span><span style="color:#A6ACCD;"> (本地环境)</span></span>\n<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">production   </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">正式环境</span><span style="color:#A6ACCD;"> (正式线服务器</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">打包)</span></span>\n<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">test         </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">测试环境</span><span style="color:#A6ACCD;"> (测试线服务器</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">打包)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">二、在每个文件中写入具体的配置内容</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.development文件的内容*****/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.production文件的内容*****/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.test*****/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  NODE_ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> production  </span><span style="color:#676E95;font-style:italic;">//注意这里一定不能加字符串</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">三、在package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 中写入</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> 1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">在纯粹的vue_cli3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x配置如下</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">serve</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service serve --mode development</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service build --mode production</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service build --mode test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;"> 2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">在uni</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">app下的vue_cli3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x的配置</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">serve</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm run dev:h5 -- development</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//修改点</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm run build:h5 -- production</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//修改点</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm run build:h5  -- test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//修改点</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:h5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=production UNI_PLATFORM=h5    vue-cli-service uni-build --mode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//修改点</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:mp-alipay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=production UNI_PLATFORM=mp-alipay vue-cli-service uni-build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:mp-baidu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=production UNI_PLATFORM=mp-baidu vue-cli-service uni-build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:mp-toutiao</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=production UNI_PLATFORM=mp-toutiao vue-cli-service uni-build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:mp-weixin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=production UNI_PLATFORM=mp-weixin vue-cli-service uni-build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev:h5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=development UNI_PLATFORM=h5 vue-cli-service uni-serve --mode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//修改点</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev:mp-alipay</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=development UNI_PLATFORM=mp-alipay vue-cli-service uni-build --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev:mp-baidu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=development UNI_PLATFORM=mp-baidu vue-cli-service uni-build --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev:mp-toutiao</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=development UNI_PLATFORM=mp-toutiao vue-cli-service uni-build --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev:mp-weixin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">info</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node node_modules/@dcloudio/vue-cli-plugin-uni/commands/info.js</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:以上不同环境的切换,修改点主要就是mode -- &#39;环境变量&#39; 然后写 NODE_ENV = production 的时候 production不要加引号 VUE_APP_GETWAY_SERVER = <a href="http://172.16.111.54:81/" target="_blank" rel="noreferrer">http://172.16.111.54:81/</a> //写域名的时候也不要加引号</p></blockquote><p>11.sourceMap</p><p>我们在项目进行打包后，会将开发中的多个文件代码打包到一个文件中，并且经过压缩，去掉多余的空格，这样处理后的代码和源代码会有很大的差别，当有bug的时候，我们只能定位到压缩处理后的代码位置，无法定位到开发环境中的代码，对于开发不好调式,因此sourceMap出现了，它就是为了解决不好调式代码问题的。</p><ol start="12"><li>解决Vue入口文件index.html缓存，导致白屏问题</li></ol><p>ngnix服务器配置不让缓存index.html</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//方案一</span></span>\n<span class="line"><span style="color:#A6ACCD;"> location </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">add_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cache</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no-cache, no-store</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//方案二</span></span>\n<span class="line"><span style="color:#A6ACCD;"> location </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">www</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">dm</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">htm</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">try_files</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$uri</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$uri</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">         </span><span style="color:#676E95;font-style:italic;">//添加header cache no store配置</span></span>\n<span class="line"><span style="color:#F07178;">         </span><span style="color:#A6ACCD;">add_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cache</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no-cache, no-store</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//方案三 (这个方案可能有效)</span></span>\n<span class="line"><span style="color:#A6ACCD;"> 再换一种方案，更改服务器配置，强制不缓存入口文件，其他静态正常缓存，比如在nginx中对静态部分如下</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> location </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">mnt</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">dat1</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">tes</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">index</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">htm</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">try_files</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$uri</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$uri</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    #### </span><span style="color:#A6ACCD;">kill</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cache</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">add_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Last</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Modified</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$date_gmt</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">add_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Cache</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Control</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">if_modified_since</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">expires</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">etag</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//设置其他静态需缓存除了index.html;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> location </span><span style="color:#89DDFF;">~*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^.+</span><span style="color:#A6ACCD;">\\</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">(jpg</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">jpeg</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">gif</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">png</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">ico</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">css</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">js)$ </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">mnt</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">dat1</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">tes</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">access_log</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">expires</span><span style="color:#F07178;"> 30</span><span style="color:#A6ACCD;">d</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  </span></span>\n<span class="line"></span></code></pre></div><ol start="13"><li>解决引入第三方npm包ie兼容问题</li></ol><p>babel-loader 会忽略所有 node_modules 中的文件，在vue.config.js中 配置以下配置可以实现显示转换</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// 1.绝对路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">transpileDependencies</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;">\\\\\\\\</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;">evecom-scplatform-front</span><span style="color:#89DDFF;">|)[</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;">\\\\\\\\</span><span style="color:#89DDFF;">]/</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 2.相对路径</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">transpileDependencies</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-baidu-map</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">element-ui</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:<code>evecom-scplatform-front</code> 是指 npm包名</p></blockquote><ol start="14"><li>当在写插件的目录，引入并测试lib模式打包的js文件，出现eslint检查错误的解决</li></ol><p>在被打包的文件头加上/<em>eslint-disable</em>/去除eslint检查。</p><blockquote><p>tips:插件包在node_module里好像就不检查eslint了</p></blockquote><ol start="14"><li>proxy 代理配置</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//配置多个代理</span></span>\n<span class="line"><span style="color:#A6ACCD;">在vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js中</span></span>\n<span class="line"><span style="color:#FFCB6B;">devServer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">proxy</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/cas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VUE_APP_CAS_SERVER</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ws: true,</span></span>\n<span class="line"><span style="color:#F07178;">        changeOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        pathRewrite</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">^/cas</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api-gateway</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        target</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VUE_APP_GETWAY_SERVER</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// ws: true,</span></span>\n<span class="line"><span style="color:#F07178;">        changeOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        pathRewrite</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">^/api-gateway</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//使用</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> cas </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">cas</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VUE_APP_CAS_SERVER</span><span style="color:#89DDFF;">}`</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> apiGateway </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">api-gateway</span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> login </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 发送短信的接口</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">sendMsgNotice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">apiGateway</span><span style="color:#89DDFF;">}${</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">service</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">noticeService</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/msgnotice/sendMsgNotice</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取token</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">cas</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/oauth2.0/accessToken</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 保存token</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">saveUsernameToken</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">cas</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/saveUsernameToken</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取用户信息</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">getUserInfo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">apiGateway</span><span style="color:#89DDFF;">}${</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">service</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">teachService</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/userInfo/userInfo?clientType=app</span><span style="color:#89DDFF;">`</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 注册用户</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">register</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">apiGateway</span><span style="color:#89DDFF;">}${</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">service</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">uumsService</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/register/appRegister</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> login</span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips:需要特别注意，本地代理时axios的baseUrl一定要设置成&#39;/&#39;, 在使用接口的时候要在接口名前加上代理名。</p></blockquote><p>15.splitChunks分包优化 大体积的包，分成多个小体积的包进行加载，减少请求时间</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">//1.全部处理</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chunks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vendors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">pages</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">index</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// page 的入口</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">src/main.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 模板来源</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">template</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">public/index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 输出文件名</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">filename</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eve-ui</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#FFCB6B;">chunks</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">chunks</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//这个比较关键,要把要分包的插件写入这里，否则页面将会白屏</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">configureWebpack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">   </span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">optimization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        splitChunks</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          chunks</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">all</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          minSize</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20000</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//代码分割的最小值，默认30k；</span></span>\n<span class="line"><span style="color:#F07178;">          maxInitialRequests</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">Infinity,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//最大的初始化加载次数，默认为3；</span></span>\n<span class="line"><span style="color:#F07178;">          cacheGroups</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//缓存组</span></span>\n<span class="line"><span style="color:#F07178;">            vendor</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              name </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">module</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">packageName</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">module.</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">](</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*?)([</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]|</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">)/</span><span style="color:#F07178;">)[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">]</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">chunks</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">packageName</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">`${</span><span style="color:#A6ACCD;">packageName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}`</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">            vendors</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vendors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">20</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assign</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">optimization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//2.单独处理</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chunks </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vendors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vuex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">element-ui</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">cacheGroups</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">//缓存组</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// // 处理入口chunk,同步的</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// commons: {</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//   chunks: &#39;initial&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//   minChunks: 2,</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//   maxInitialRequests: 5, // The default limit is too small to showcase the effect</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//   minSize: 0, // This is example is too small to create commons chunks</span></span>\n<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// },</span></span>\n<span class="line"><span style="color:#F07178;">    </span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">vuex</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vuex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">vuex</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">10</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">10</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">vue</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">10</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">element-ui</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">element-ui</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">element-ui</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">10</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#FFCB6B;">vendors</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vendors</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">test</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]</span><span style="color:#C3E88D;">node_modules</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#FFCB6B;">priority</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">20</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;"> </span></span>\n<span class="line"><span style="color:#F07178;"> </span></span>\n<span class="line"></span></code></pre></div><h2 id="_4-各种插件的介绍和引用" tabindex="-1">4. 各种插件的介绍和引用 <a class="header-anchor" href="#_4-各种插件的介绍和引用" aria-label="Permalink to &quot;4. 各种插件的介绍和引用&quot;">​</a></h2><ol><li>postcss-plugin-px2rem<br> 配置文件名<code>postcss.config.js</code> <code>vue-cli3.x</code>脚手架自带的<code>px</code>转<code>rem</code>等单位和自动加浏览器前缀的配置,建立脚手架的时候选择分离,不然配置在<code>josn</code>文件中不好配置； rootValue中的192为1rem所对应的px；默认为100，我这里设计图是1920的所以改为192。如果设计图是750，rootValue，就是75。</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//自动加前缀</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">autoprefixer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//自动转rem</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">postcss-plugin-px2rem</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">rootValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">192</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//设计图的宽度/10</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">unitPrecision</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//换算的rem保留几位小数点</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">mediaQuery</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flase</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">//媒体查询条件值是否开启转换rem</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">minPixelValue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// exclude:/node_modules|folder_name/i,把第三方的框架排除掉</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ]</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips: 这边会有歧义，<code>mediaQuery</code>设置为<code>true</code>，会导致<code>@media screen and (max-width: 1200px){}</code> 中的<code>1200px</code>会转为<code>rem</code>,但媒体查询内部的值的转换不会受到影响，会进行值的转换，所以设置为<code>false</code>。 自动添加前缀如果看不效果要改browserslistrc这个文件，建议配置如下，特别注意如果没有安装postcss-plugin-px2rem 这个插件postcss.config.js可全都不要配置，它已经自带有自动添加前缀功能，只需要修改browserslistrc这个文件即可</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&gt; 1%</span></span>\n<span class="line"><span style="color:#A6ACCD;">last 2 versions</span></span>\n<span class="line"><span style="color:#A6ACCD;">not ie &lt;= 8</span></span>\n<span class="line"><span style="color:#A6ACCD;">chrome &gt;= 14</span></span>\n<span class="line"><span style="color:#A6ACCD;">safari &gt;= 3</span></span>\n<span class="line"><span style="color:#A6ACCD;">not dead</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol start="2"><li>babel-plugin-transform-remove-console</li></ol><p>删除<code>console</code>,在根目录中新建个<code>.babelrc</code>的文件,在以下文件中配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//第一种</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">env</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">production</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#F07178;">        [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transform-remove-console</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">exclude</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span></span>\n<span class="line"><span style="color:#F07178;">      ]</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//第二种</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">一、建立环境配置文件</span></span>\n<span class="line"><span style="color:#A6ACCD;">在package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 同级的目录下 建立3个文件</span></span>\n<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">development  </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">开发环境</span><span style="color:#A6ACCD;"> (本地环境)</span></span>\n<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">production   </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">正式环境</span><span style="color:#A6ACCD;"> (正式线服务器</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">打包)</span></span>\n<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">test         </span><span style="color:#89DDFF;">--</span><span style="color:#82AAFF;">测试环境</span><span style="color:#A6ACCD;"> (测试线服务器</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">打包)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">二、在每个文件中写入具体的配置内容</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.development文件的内容*****/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.production文件的内容*****/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">/*****.env.test*****/</span></span>\n<span class="line"><span style="color:#A6ACCD;">  NODE_ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> production  </span><span style="color:#676E95;font-style:italic;">//注意这里的production一定不能加字符串</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ENV </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">三、在package</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">json 中写入</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">serve</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service serve --mode development</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service build --mode production</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">build:test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-cli-service build --mode test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">四、在babel</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js 中写</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> transformRemoveConsolePlugin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VUE_APP_CURRENT_MODE </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">transformRemoveConsolePlugin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#F07178;">    [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">transform-remove-console</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> exclude</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">warn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span></span>\n<span class="line"><span style="color:#F07178;">  ]</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">presets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vue/app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">transformRemoveConsolePlugin]</span></span>\n<span class="line"><span style="color:#89DDFF;">};</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><ol start="3"><li><code>html-webpack-plugin</code> 当使用 <code>html-webpack-plugin</code> 之后,我们不再需要手动处理<code>bundle.js</code>的引用路径了,因为这个插件,已经帮我们自动创建了一个合适的script,并且,引用了正确的路径</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*导入在内存中生成html页面的插件,只要是插件,都一定要放到plugins节点中去</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> htmlWebpackPlugin</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">html-webpack-plugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//创建一个 内存中 生成html 页面的插件</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">htmlWebpackPlugin</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#A6ACCD;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/index.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"> filename:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">index.html</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//这个节点,用于配置 所有 第三方模块 加载器</span></span>\n<span class="line"><span style="color:#FFCB6B;">module</span><span style="color:#89DDFF;">:{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">[</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">test</span><span style="color:#89DDFF;">:/</span><span style="color:#F07178;">\\</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css$</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">use</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">[]</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  ]     </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><ol start="4"><li>prerender-spa-plugin</li></ol><p>构建阶段生成匹配预渲染路径的 html 文件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm install prerender</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">spa</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">plugin </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">save</span></span>\n<span class="line"><span style="color:#A6ACCD;">vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js </span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> PrerenderSPAPlugin </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">prerender-spa-plugin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Renderer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PrerenderSPAPlugin</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PuppeteerRenderer</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">configureWebpack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isProduction</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CompressionWebpackPlugin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">          algorithm</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">gzip</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          test</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">RegExp</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">.(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">productionGzipExtensions</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">|</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)$</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          threshold</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10240</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">          minRatio</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.8</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">      )</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">plugins</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PrerenderSPAPlugin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            staticDir</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            routes</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;/&#39;</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;/show&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;/websocket&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;websocket2&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;/websocket3&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;/home&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/AbnormalStatis&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/FocusCrowd&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/FocusDetail&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/ScaleDetail&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/WarnSetup&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/WarnDetail&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/WarnLists&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/PsychMonth&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/PsychTeacher&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;abnormal/PsychList&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;laboratory/sports/MoveClock&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;laboratory/sports/ClockDetail&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;activity/ActList&#39;,</span></span>\n<span class="line"><span style="color:#89DDFF;">              </span><span style="color:#676E95;font-style:italic;">// &#39;activity/ActForm&#39;</span></span>\n<span class="line"><span style="color:#F07178;">            ]</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">            minify</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              minifyCSS</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// css压缩</span></span>\n<span class="line"><span style="color:#F07178;">              removeComments</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 移除注释</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">            server</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              port</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">8080</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">//忽略打包错误</span></span>\n<span class="line"><span style="color:#F07178;">            ignoreJSErrors</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            phantomOptions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--web-security=false</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            maxAttempts</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">            renderer</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Renderer</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">              injectProperty</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__PRERENDER_INJECTED</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              inject</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">              headless</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              renderAfterTime</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">5000</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">              renderAfterDocumentEvent</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">render-event</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">        )</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">\t main</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js</span></span>\n<span class="line"><span style="color:#A6ACCD;">\t  </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">\t   </span><span style="color:#F07178;">mounted</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">\t    </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dispatchEvent</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Event</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">render-event</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)) </span></span>\n<span class="line"><span style="color:#F07178;">\t  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">\t </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><blockquote><p>tips: <code>main.js</code>中的<code>render-event</code>,要和 <code>renderAfterDocumentEvent:&#39;render-event&#39;</code> 一一对应 ,<code>publicPath</code> 目前验证必须是/ 不能自定义文件夹</p></blockquote><p>5.webpack-bundle-analyzer</p><p>打包后各个包大小分析插件</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm i webpack</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">bundle</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">analyzer </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">save</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">dev</span></span>\n<span class="line"></span></code></pre></div><p>在vue.config.js中配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">chainWebpack</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">plugin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack-bundle-analyzer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">require</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">webpack-bundle-analyzer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BundleAnalyzerPlugin</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span></code></pre></div>',284);const v=s(c,[["render",function(s,o,t,c,v,f){return e(),n("div",null,[r,a("ul",null,[a("li",null,[D,l(" 解决"+p()+"插值闪烁问题",1)]),y,F,i,C]),A,a("ul",null,[d,u,a("li",null,[a("p",null,[m,l("：这是遇到的第3个生命周期函数,表示 模板已经在内存中编辑完成,但是尚未把模板渲染(挂载)到页面中。在 "),h,l(" 执行的时候,页面中的元素,还没有被真正替换过来,只是之前写的一些模板字符串。就像"+p(s.text)+"这样",1)])]),g]),E])}]]);export{t as __pageData,v as default};
